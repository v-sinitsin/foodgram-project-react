name: Foodgram workflow

on: [push]

jobs:
  build_and_push_to_docker_hub:
      name: Push Docker images to Docker Hub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to Docker 
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push frontend image to Docker Hub
          uses: docker/build-push-action@v2
          with:
            context: frontend
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend:latest
        - name: Push backend image to Docker Hub
          uses: docker/build-push-action@v2
          with:
            context: backend
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest
  
  deploy:
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub
      if: github.ref == 'refs/heads/master'
      steps:
        - uses: actions/checkout@master
        - name: copy docker-compose.yaml and ngninx.conf to remote
          uses: appleboy/scp-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            source: "infra/*"
            target: "."          
        - name: executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            script: |
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend:latest
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest
              sudo docker-compose stop
              cd infra
              touch .env 
              echo DB_NAME=${{ secrets.DB_NAME }} >> .env
              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
              echo DB_HOST=${{ secrets.DB_HOST }} >> .env
              echo DB_PORT=${{ secrets.DB_PORT }} >> .env
              echo DJANGO_SECRET_KEY='${{ secrets.DJANGO_SECRET_KEY }}' >> .env
              sudo docker-compose up -d